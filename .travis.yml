language: cpp

matrix:
   include:
     - os: linux
       sudo: required
       dist: trusty
       env: MYCC=gcc-5 MYCXX=g++-5 GCOV=gcov-5 PKG=g++-5
     - os: linux
       sudo: required
       dist: trusty
       env: MYCC=gcc-6 MYCXX=g++-6 GCOV=gcov-6 PKG=g++-6
     - os: linux
       sudo: required
       dist: trusty
       env: MYCC=gcc-7 MYCXX=g++-7 GCOV=gcov-7 PKG=g++-7
     - os: linux
       sudo: required
       dist: trusty
       env: MYCC=clang MYCXX=clang++ GCOV=llvm-cov PKG="clang llvm"
     - os: osx
       env: MYCC=clang-37 MYCXX=clang++-37 GCOV=llvm-cov

before_install:
     - if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then 
     -   sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
     -   sudo add-apt-repository -y ppa:mhier/libboost-latest
     -   sudo apt-get update
     - else
     -   brew tap homebrew/versions
     -   brew update
     - fi

install:
     - if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then 
     -   sudo apt-get install libboost1.67-dev cmake lcov
     -   sudo apt-get install ${PKG}
     - else
     -   brew install llvm37
     - fi
    
script:
    ############################################################################
    # Build main and tests
    ############################################################################
     - mkdir -p build
     - cd build
     - export CC=${MYCC}
     - export CXX=${MYCXX}
     - which $CC
     - which $CXX
     - $CC --version
     - $CXX --version
     - cmake -DCMAKE_BUILD_TYPE=Debug .. 
     - make
     - make test

after_success:
     # Creating report
     - cd ${TRAVIS_BUILD_DIR}
     - lcov --gcov-tool ${GCOV} --directory . --capture --output-file coverage.info # capture coverage info
     - lcov --gcov-tool ${GCOV} --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
     - lcov --gcov-tool ${GCOV} --list coverage.info #debug info
     # Uploading report to CodeCov
     - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
